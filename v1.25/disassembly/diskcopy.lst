CODE:0100                   ;
CODE:0100                   ; ╔═════════════════════════════════════════════════════════════════════════╗
CODE:0100                   ; ║     This file is generated by The Interactive Disassembler (IDA)        ║
CODE:0100                   ; ║     Copyright (c) 2010 by Hex-Rays SA, <support@hex-rays.com>           ║
CODE:0100                   ; ║                      Licensed to: Freeware version                      ║
CODE:0100                   ; ╚═════════════════════════════════════════════════════════════════════════╝
CODE:0100                   ;
CODE:0100                   ; Input MD5   : AA465C0204B780AD73572C2220F7C231
CODE:0100
CODE:0100                   ; File Name   : ...\DISKCOPY.COM
CODE:0100                   ; Format      : MS-DOS COM-file
CODE:0100                   ; Base Address: 1000h Range: 10100h-108D8h Loaded length: 7D8h
CODE:0100
CODE:0100                                   .686p
CODE:0100                                   .mmx
CODE:0100                                   .model tiny
CODE:0100
CODE:0100                                   include diskcopy.inc
CODE:0100
CODE:0100                   ; ═══════════════════════════════════════════════════════════════════════════
CODE:0100
CODE:0100                   ; Segment type: Pure code
CODE:0100                   CODE            segment byte public 'CODE' use16
CODE:0100                                   assume cs:CODE
CODE:0100                                   org 100h
CODE:0100                                   assume es:nothing, ss:nothing, ds:CODE, fs:nothing, gs:nothing
CODE:0100
CODE:0100                   ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
CODE:0100
CODE:0100                   ; Attributes: thunk
CODE:0100
CODE:0100                                   public DISKCOPY
CODE:0100                   DISKCOPY        proc near               ; DATA XREF: DISK_ENTRY+1↓o
CODE:0100 E9 A9 06                          jmp     DISK_ENTRY
CODE:0100                   DISKCOPY        endp
CODE:0100
CODE:0100                   ; ───────────────────────────────────────────────────────────────────────────
CODE:0103 54 68 65 20 49 42+aTheIbmPersonal db 'The IBM Personal Computer Diskette Copier Version 1.10 '
CODE:013A 28 43 29 43 6F 70+aCCopyrightIbmC db '(C)Copyright IBM Corp 1981, 1982 '
CODE:015B 4C 69 63 65 6E 73+aLicensedMateri db 'Licensed Material - Program Property of IBM '
CODE:0187 41 75 74 68 6F 72+aAuthorDavidLit db 'Author - David Litton '
CODE:019D
CODE:019D                   ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
CODE:019D
CODE:019D
CODE:019D                   DISK_CONT       proc near               ; CODE XREF: DISK_CONT+83↓j
CODE:019D                                                           ; DISK_ENTRY:NOARGS↓j
CODE:019D BA 7F 05                          mov     dx, offset SRCMSG ; "\r\nInsert source diskette in drive "
CODE:01A0 B4 09                             mov     ah, 9
CODE:01A2 CD 21                             int     21h             ; DOS - PRINT STRING
CODE:01A2                                                           ; DS:DX -> string terminated by "$"
CODE:01A4 F6 06 38 05 01                    test    FLAGS, F_ONEDRV
CODE:01A9 74 0A                             jz      short TWODRV4
CODE:01AB BA CD 05                          mov     dx, offset KEYMSG ; "\r\nStrike any key when ready\r\n$"
CODE:01AE CD 21                             int     21h             ; DOS - PRINT STRING
CODE:01AE                                                           ; DS:DX -> string terminated by "$"
CODE:01B0 E8 8D 00                          call    GETKEY
CODE:01B3 EB 03                             jmp     short CPYLP
CODE:01B5                   ; ───────────────────────────────────────────────────────────────────────────
CODE:01B5
CODE:01B5                   TWODRV4:                                ; CODE XREF: DISK_CONT+C↑j
CODE:01B5 E8 7C 00                          call    ASKDST
CODE:01B8
CODE:01B8                   CPYLP:                                  ; CODE XREF: DISK_CONT+16↑j
CODE:01B8                                                           ; DISK_CONT+8B↓j ...
CODE:01B8 E8 8C 00                          call    RDSECS
CODE:01BB F6 06 38 05 01                    test    FLAGS, F_ONEDRV
CODE:01C0 74 03                             jz      short TWODRV5
CODE:01C2 E8 6F 00                          call    ASKDST
CODE:01C5
CODE:01C5                   TWODRV5:                                ; CODE XREF: DISK_CONT+23↑j
CODE:01C5 E8 6F 01                          call    WRSECS
CODE:01C8 82 3E 35 05 28                    cmp     TRKNO, 40
CODE:01CD 75 54                             jnz     short MORETRKS
CODE:01CF BA 85 06                          mov     dx, offset DSTBADERR ; "\r\nTarget diskette may be unusable\a\r\n$"
CODE:01D2 F6 06 38 05 20                    test    FLAGS, F_DSTBAD
CODE:01D7 75 03                             jnz     short ERRDSTBAD
CODE:01D9 BA EB 05                          mov     dx, offset GOODMSG ; "\r\nCopy complete\r\n$"
CODE:01DC
CODE:01DC                   ERRDSTBAD:                              ; CODE XREF: DISK_CONT+3A↑j
CODE:01DC                                                           ; WRSECS+D6↓j ...
CODE:01DC B4 09                             mov     ah, 9
CODE:01DE CD 21                             int     21h             ; DOS - PRINT STRING
CODE:01DE                                                           ; DS:DX -> string terminated by "$"
CODE:01E0
CODE:01E0                   PROMPTANO:                              ; CODE XREF: DISK_CONT+59↓j
CODE:01E0 BA 33 07                          mov     dx, offset ANOPROMPT ; "\r\nCopy another (Y/N)?$"
CODE:01E3 B4 09                             mov     ah, 9
CODE:01E5 CD 21                             int     21h             ; DOS - PRINT STRING
CODE:01E5                                                           ; DS:DX -> string terminated by "$"
CODE:01E7 B8 01 0C                          mov     ax, 0C01h
CODE:01EA CD 21                             int     21h             ; DOS - CLEAR KEYBOARD BUFFER
CODE:01EA                                                           ; AL must be 01h, 06h, 07h, 08h, or 0Ah.
CODE:01EC 0C 20                             or      al, 20h
CODE:01EE 3C 6E                             cmp     al, 'n'
CODE:01F0 75 02                             jnz     short ANO1
CODE:01F2 CD 20                             int     20h             ; DOS - PROGRAM TERMINATION
CODE:01F2                                                           ; returns to DOS--identical to INT 21/AH=00h
CODE:01F4                   ; ───────────────────────────────────────────────────────────────────────────
CODE:01F4
CODE:01F4                   ANO1:                                   ; CODE XREF: DISK_CONT+53↑j
CODE:01F4 3C 79                             cmp     al, 'y'
CODE:01F6 75 E8                             jnz     short PROMPTANO
CODE:01F8 BC 00 01                          mov     sp, 100h
CODE:01FB C6 06 35 05 00                    mov     TRKNO, 0
CODE:0200 F6 06 38 05 02                    test    FLAGS, F_USR1SID
CODE:0205 75 14                             jnz     short ANO2
CODE:0207 C6 06 3D 05 01                    mov     NXTSIDNO, 1
CODE:020C F6 06 38 05 40                    test    FLAGS, 40h
CODE:0211 74 08                             jz      short ANO2
CODE:0213 A0 36 05                          mov     al, BUFNTRKS
CODE:0216 D0 E0                             shl     al, 1
CODE:0218 A2 36 05                          mov     BUFNTRKS, al
CODE:021B
CODE:021B                   ANO2:                                   ; CODE XREF: DISK_CONT+68↑j
CODE:021B                                                           ; DISK_CONT+74↑j
CODE:021B 80 26 38 05 03                    and     FLAGS, F_ONEDRV or F_USR1SID
CODE:0220 E9 7A FF                          jmp     DISK_CONT
CODE:0223                   ; ───────────────────────────────────────────────────────────────────────────
CODE:0223
CODE:0223                   MORETRKS:                               ; CODE XREF: DISK_CONT+30↑j
CODE:0223 F6 06 38 05 01                    test    FLAGS, F_ONEDRV
CODE:0228 74 8E                             jz      short CPYLP
CODE:022A E8 02 00                          call    ASKSRC
CODE:022D EB 89                             jmp     short CPYLP
CODE:022D                   DISK_CONT       endp
CODE:022D
CODE:022F
CODE:022F                   ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
CODE:022F
CODE:022F
CODE:022F                   ASKSRC          proc near               ; CODE XREF: DISK_CONT+8D↑p
CODE:022F BA 7F 05                          mov     dx, offset SRCMSG ; "\r\nInsert source diskette in drive "
CODE:0232 EB 03                             jmp     short ASKKEY
CODE:0232                   ASKSRC          endp
CODE:0232
CODE:0234
CODE:0234                   ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
CODE:0234
CODE:0234
CODE:0234                   ASKDST          proc near               ; CODE XREF: DISK_CONT:TWODRV4↑p
CODE:0234                                                           ; DISK_CONT+25↑p
CODE:0234 BA A6 05                          mov     dx, offset DSTMSG ; "\r\nInsert target diskette in drive "
CODE:0234                   ASKDST          endp
CODE:0234
CODE:0237
CODE:0237                   ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
CODE:0237
CODE:0237
CODE:0237                   ASKKEY          proc near               ; CODE XREF: ASKSRC+3↑j
CODE:0237 B4 09                             mov     ah, 9
CODE:0239 CD 21                             int     21h             ; DOS - PRINT STRING
CODE:0239                                                           ; DS:DX -> string terminated by "$"
CODE:023B BA CD 05                          mov     dx, offset KEYMSG ; "\r\nStrike any key when ready\r\n$"
CODE:023E CD 21                             int     21h             ; DOS - PRINT STRING
CODE:023E                   ASKKEY          endp                    ; DS:DX -> string terminated by "$"
CODE:023E
CODE:0240
CODE:0240                   ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
CODE:0240
CODE:0240
CODE:0240                   GETKEY          proc near               ; CODE XREF: DISK_CONT+13↑p
CODE:0240 B4 0C                             mov     ah, 0Ch
CODE:0242 B0 01                             mov     al, 1
CODE:0244 CD 21                             int     21h             ; DOS - CLEAR KEYBOARD BUFFER
CODE:0244                                                           ; AL must be 01h, 06h, 07h, 08h, or 0Ah.
CODE:0246 C3                                retn
CODE:0246                   GETKEY          endp
CODE:0246
CODE:0247
CODE:0247                   ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
CODE:0247
CODE:0247
CODE:0247                   RDSECS          proc near               ; CODE XREF: DISK_CONT:CPYLP↑p
CODE:0247 80 26 38 05 F7                    and     FLAGS, F_ONEDRV or F_USR1SID or F_GOTSIDS or F_DSTBAD or F_CPY2SID or F_FMTDST or 4
CODE:024C C6 06 39 05 00                    mov     NRDTRY, 0
CODE:0251 8A 16 5C 00                       mov     dl, ds:SOURCE
CODE:0255 32 F6                             xor     dh, dh
CODE:0257 B1 01                             mov     cl, 1
CODE:0259 8A 2E 35 05                       mov     ch, TRKNO
CODE:025D 02 2E 36 05                       add     ch, BUFNTRKS
CODE:0261 88 2E 37 05                       mov     NXTTRKNO, ch
CODE:0265 2A 2E 36 05                       sub     ch, BUFNTRKS
CODE:0269 8E 06 3E 05                       mov     es, BUFFER
CODE:026D 8C C5                             mov     bp, es
CODE:026F 82 3E 37 05 28                    cmp     NXTTRKNO, 40
CODE:0274 76 05                             jbe     short DORD
CODE:0276 C6 06 37 05 28                    mov     NXTTRKNO, 40
CODE:027B
CODE:027B                   DORD:                                   ; CODE XREF: RDSECS+2D↑j
CODE:027B                                                           ; RDSECS+80↓j ...
CODE:027B 33 DB                             xor     bx, bx
CODE:027D B8 08 02                          mov     ax, 208h
CODE:0280 CD 13                             int     13h             ; DISK - READ SECTORS INTO MEMORY
CODE:0280                                                           ; AL = number of sectors to read, CH = track, CL = sector
CODE:0280                                                           ; DH = head, DL = drive, ES:BX -> buffer to fill
CODE:0280                                                           ; Return: CF set on error, AH = status, AL = number of sectors read
CODE:0282 72 4E                             jb      short RDRESET
CODE:0284
CODE:0284                   RDNXT1:                                 ; CODE XREF: RDSECS+DD↓j
CODE:0284 C6 06 39 05 00                    mov     NRDTRY, 0
CODE:0289 F6 06 38 05 10                    test    FLAGS, F_GOTSIDS
CODE:028E 75 2B                             jnz     short RDNXT2
CODE:0290 F6 06 38 05 02                    test    FLAGS, F_USR1SID
CODE:0295 75 71                             jnz     short MSG1SID
CODE:0297 0A ED                             or      ch, ch
CODE:0299 75 20                             jnz     short RDNXT2
CODE:029B 82 FE 01                          cmp     dh, 1
CODE:029E 75 1B                             jnz     short RDNXT2
CODE:02A0 80 0E 38 05 50                    or      FLAGS, F_GOTSIDS or F_CPY2SID
CODE:02A5 8A 26 36 05                       mov     ah, BUFNTRKS
CODE:02A9 D0 EC                             shr     ah, 1
CODE:02AB 88 26 36 05                       mov     BUFNTRKS, ah
CODE:02AF 88 26 37 05                       mov     NXTTRKNO, ah
CODE:02B3 C6 06 53 07 32                    mov     NSIDSDIG, '2'
CODE:02B8 E8 72 00                          call    MSGCPY
CODE:02BB
CODE:02BB                   RDNXT2:                                 ; CODE XREF: RDSECS+47↑j
CODE:02BB                                                           ; RDSECS+52↑j ...
CODE:02BB 81 C5 00 01                       add     bp, 100h
CODE:02BF 8E C5                             mov     es, bp
CODE:02C1 86 36 3D 05                       xchg    dh, NXTSIDNO
CODE:02C5 0A F6                             or      dh, dh
CODE:02C7 75 B2                             jnz     short DORD
CODE:02C9 FE C5                             inc     ch
CODE:02CB 3A 2E 37 05                       cmp     ch, NXTTRKNO
CODE:02CF 75 AA                             jnz     short DORD
CODE:02D1 C3                                retn
CODE:02D2                   ; ───────────────────────────────────────────────────────────────────────────
CODE:02D2
CODE:02D2                   RDRESET:                                ; CODE XREF: RDSECS+3B↑j
CODE:02D2 50                                push    ax
CODE:02D3 33 C0                             xor     ax, ax
CODE:02D5 CD 13                             int     13h             ; DISK - RESET DISK SYSTEM
CODE:02D5                                                           ; DL = drive (if bit 7 is set both hard disks and floppy disks reset)
CODE:02D7 58                                pop     ax
CODE:02D8 80 FC 80                          cmp     ah, 80h
CODE:02DB 74 4A                             jz      short RDNRDY
CODE:02DD FE 06 39 05                       inc     NRDTRY
CODE:02E1 82 3E 39 05 04                    cmp     NRDTRY, 4
CODE:02E6 75 93                             jnz     short DORD
CODE:02E8 F6 06 38 05 10                    test    FLAGS, F_GOTSIDS
CODE:02ED 75 2F                             jnz     short ERRRD
CODE:02EF 0A ED                             or      ch, ch
CODE:02F1 75 2B                             jnz     short ERRRD
CODE:02F3 82 FE 01                          cmp     dh, 1
CODE:02F6 75 26                             jnz     short ERRRD
CODE:02F8 82 FC 02                          cmp     ah, 2
CODE:02FB 74 05                             jz      short MAYBE1SID
CODE:02FD 82 FC 04                          cmp     ah, 4
CODE:0300 75 1C                             jnz     short ERRRD
CODE:0302
CODE:0302                   MAYBE1SID:                              ; CODE XREF: RDSECS+B4↑j
CODE:0302 81 ED 00 01                       sub     bp, 100h
CODE:0306 8E C5                             mov     es, bp
CODE:0308
CODE:0308                   MSG1SID:                                ; CODE XREF: RDSECS+4E↑j
CODE:0308 80 0E 38 05 10                    or      FLAGS, F_GOTSIDS
CODE:030D 32 F6                             xor     dh, dh
CODE:030F C6 06 39 05 00                    mov     NRDTRY, 0
CODE:0314 C6 06 53 07 31                    mov     NSIDSDIG, '1'
CODE:0319 E8 11 00                          call    MSGCPY
CODE:031C EB 9D                             jmp     short RDNXT2
CODE:031E                   ; ───────────────────────────────────────────────────────────────────────────
CODE:031E
CODE:031E                   ERRRD:                                  ; CODE XREF: RDSECS+A6↑j
CODE:031E                                                           ; RDSECS+AA↑j ...
CODE:031E B8 FD 05                          mov     ax, offset RDERR ; "\r\nUnrecoverable read error on source$"
CODE:0321 E8 97 01                          call    WARN
CODE:0324 E9 5D FF                          jmp     RDNXT1
CODE:0327                   ; ───────────────────────────────────────────────────────────────────────────
CODE:0327
CODE:0327                   RDNRDY:                                 ; CODE XREF: RDSECS+94↑j
CODE:0327 E8 DC 01                          call    ERRNRDY
CODE:032A E9 4E FF                          jmp     DORD
CODE:032A                   RDSECS          endp
CODE:032A
CODE:032D
CODE:032D                   ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
CODE:032D
CODE:032D
CODE:032D                   MSGCPY          proc near               ; CODE XREF: RDSECS+71↑p
CODE:032D                                                           ; RDSECS+D2↑p
CODE:032D 52                                push    dx
CODE:032E BA 49 07                          mov     dx, offset CPYMSG ; "\r\nCopying "
CODE:0331 B4 09                             mov     ah, 9
CODE:0333 CD 21                             int     21h             ; DOS - PRINT STRING
CODE:0333                                                           ; DS:DX -> string terminated by "$"
CODE:0335 5A                                pop     dx
CODE:0336 C3                                retn
CODE:0336                   MSGCPY          endp
CODE:0336
CODE:0337
CODE:0337                   ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
CODE:0337
CODE:0337
CODE:0337                   WRSECS          proc near               ; CODE XREF: DISK_CONT:TWODRV5↑p
CODE:0337 8A 16 5D 00                       mov     dl, ds:DEST
CODE:033B 32 F6                             xor     dh, dh
CODE:033D B1 01                             mov     cl, 1
CODE:033F 8A 2E 35 05                       mov     ch, TRKNO
CODE:0343 8E 06 3E 05                       mov     es, BUFFER
CODE:0347 8C C5                             mov     bp, es
CODE:0349
CODE:0349                   WRNXT1:                                 ; CODE XREF: WRSECS+56↓j
CODE:0349                                                           ; WRSECS+9C↓j ...
CODE:0349 C6 06 3A 05 00                    mov     NWRTRY, 0
CODE:034E C6 06 3B 05 00                    mov     NVRFYTRY, 0
CODE:0353 F6 06 38 05 80                    test    FLAGS, F_FMTDST
CODE:0358 74 07                             jz      short DOWR
CODE:035A 0A F6                             or      dh, dh
CODE:035C 75 03                             jnz     short DOWR
CODE:035E E8 E8 00                          call    FMTTRK
CODE:0361
CODE:0361                   DOWR:                                   ; CODE XREF: WRSECS+21↑j
CODE:0361                                                           ; WRSECS+25↑j ...
CODE:0361 80 0E 38 05 08                    or      FLAGS, F_DSTWRT
CODE:0366 33 DB                             xor     bx, bx
CODE:0368 B8 08 03                          mov     ax, 308h
CODE:036B CD 13                             int     13h             ; DISK - WRITE SECTORS FROM MEMORY
CODE:036B                                                           ; AL = number of sectors to write, CH = track, CL = sector
CODE:036B                                                           ; DH = head, DL = drive, ES:BX -> buffer
CODE:036B                                                           ; Return: CF set on error, AH = status, AL = number of sectors written
CODE:036D 72 29                             jb      short WRRESET
CODE:036F E8 9E 00                          call    VRFYSECS
CODE:0372 82 3E 3B 05 00                    cmp     NVRFYTRY, 0
CODE:0377 75 E8                             jnz     short DOWR
CODE:0379
CODE:0379                   WRNXT2:                                 ; CODE XREF: WRSECS+B2↓j
CODE:0379                                                           ; VRFYSECS+31↓j
CODE:0379 86 36 3D 05                       xchg    dh, NXTSIDNO
CODE:037D 0A F6                             or      dh, dh
CODE:037F 75 02                             jnz     short WRNXT3
CODE:0381 FE C5                             inc     ch
CODE:0383
CODE:0383                   WRNXT3:                                 ; CODE XREF: WRSECS+48↑j
CODE:0383 81 C5 00 01                       add     bp, 100h
CODE:0387 8E C5                             mov     es, bp
CODE:0389 3A 2E 37 05                       cmp     ch, NXTTRKNO
CODE:038D 75 BA                             jnz     short WRNXT1
CODE:038F 8A 26 37 05                       mov     ah, NXTTRKNO
CODE:0393 88 26 35 05                       mov     TRKNO, ah
CODE:0397 C3                                retn
CODE:0398                   ; ───────────────────────────────────────────────────────────────────────────
CODE:0398
CODE:0398                   WRRESET:                                ; CODE XREF: WRSECS+36↑j
CODE:0398 50                                push    ax
CODE:0399 33 C0                             xor     ax, ax
CODE:039B CD 13                             int     13h             ; DISK - RESET DISK SYSTEM
CODE:039B                                                           ; DL = drive (if bit 7 is set both hard disks and floppy disks reset)
CODE:039D 58                                pop     ax
CODE:039E 80 FC 80                          cmp     ah, 80h
CODE:03A1 74 48                             jz      short WRNRDY
CODE:03A3 82 FC 03                          cmp     ah, 3
CODE:03A6 74 49                             jz      short ERRWP
CODE:03A8 FE 06 3A 05                       inc     NWRTRY
CODE:03AC 82 3E 3A 05 04                    cmp     NWRTRY, 4
CODE:03B1 75 AE                             jnz     short DOWR
CODE:03B3 82 FC 02                          cmp     ah, 2
CODE:03B6 74 05                             jz      short NEEDFMT
CODE:03B8 82 FC 04                          cmp     ah, 4
CODE:03BB 75 26                             jnz     short ERRWR
CODE:03BD
CODE:03BD                   NEEDFMT:                                ; CODE XREF: WRSECS+7F↑j
CODE:03BD F6 06 38 05 80                    test    FLAGS, F_FMTDST
CODE:03C2 75 36                             jnz     short FMTALRDY
CODE:03C4 80 0E 38 05 80                    or      FLAGS, F_FMTDST
CODE:03C9 B8 62 05                          mov     ax, offset FMTMSG ; "\r\nFormatting while copying\r\n$"
CODE:03CC E8 EC 00                          call    WARN
CODE:03CF 0A F6                             or      dh, dh
CODE:03D1 75 03                             jnz     short SID0AGN
CODE:03D3 E9 73 FF                          jmp     WRNXT1
CODE:03D6                   ; ───────────────────────────────────────────────────────────────────────────
CODE:03D6
CODE:03D6                   SID0AGN:                                ; CODE XREF: WRSECS+9A↑j
CODE:03D6 81 ED 00 01                       sub     bp, 100h
CODE:03DA 8E C5                             mov     es, bp
CODE:03DC 86 36 3D 05                       xchg    dh, NXTSIDNO
CODE:03E0 E9 66 FF                          jmp     WRNXT1
CODE:03E3                   ; ───────────────────────────────────────────────────────────────────────────
CODE:03E3
CODE:03E3                   ERRWR:                                  ; CODE XREF: WRSECS+84↑j
CODE:03E3                                                           ; WRSECS+C5↓j ...
CODE:03E3 B8 22 06                          mov     ax, offset WRERR ; "\r\nUnrecoverable write error on target$"
CODE:03E6 E8 D2 00                          call    WARN
CODE:03E9 EB 8E                             jmp     short WRNXT2
CODE:03EB                   ; ───────────────────────────────────────────────────────────────────────────
CODE:03EB
CODE:03EB                   WRNRDY:                                 ; CODE XREF: WRSECS+6A↑j
CODE:03EB E8 18 01                          call    ERRNRDY
CODE:03EE E9 70 FF                          jmp     DOWR
CODE:03F1                   ; ───────────────────────────────────────────────────────────────────────────
CODE:03F1
CODE:03F1                   ERRWP:                                  ; CODE XREF: WRSECS+6F↑j
CODE:03F1 B8 EE 06                          mov     ax, offset WPERR ; "\r\nTarget diskette write protected\r\n"
CODE:03F4 E8 C4 00                          call    WARN
CODE:03F7 E9 67 FF                          jmp     DOWR
CODE:03FA                   ; ───────────────────────────────────────────────────────────────────────────
CODE:03FA
CODE:03FA                   FMTALRDY:                               ; CODE XREF: WRSECS+8B↑j
CODE:03FA 0A ED                             or      ch, ch
CODE:03FC 75 E5                             jnz     short ERRWR
CODE:03FE 82 FE 01                          cmp     dh, 1
CODE:0401 75 E0                             jnz     short ERRWR
CODE:0403 BA 5F 07                          mov     dx, offset NCMPERR ; "\r\nIncompatible drive types\r\n\a$"
CODE:0406 B4 09                             mov     ah, 9
CODE:0408 CD 21                             int     21h             ; DOS - PRINT STRING
CODE:0408                                                           ; DS:DX -> string terminated by "$"
CODE:040A BA D2 06                          mov     dx, offset UNUSAERR ; "Target diskette unusable\a\r\n$"
CODE:040D E9 CC FD                          jmp     ERRDSTBAD
CODE:040D                   WRSECS          endp
CODE:040D
CODE:0410
CODE:0410                   ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
CODE:0410
CODE:0410
CODE:0410                   VRFYSECS        proc near               ; CODE XREF: WRSECS+38↑p
CODE:0410                                                           ; VRFYSECS+37↓j
CODE:0410 80 26 38 05 F7                    and     FLAGS, F_ONEDRV or F_USR1SID or F_GOTSIDS or F_DSTBAD or F_CPY2SID or F_FMTDST or 4
CODE:0415 33 DB                             xor     bx, bx
CODE:0417 B8 08 04                          mov     ax, 408h
CODE:041A CD 13                             int     13h             ; DISK - VERIFY SECTORS
CODE:041A                                                           ; AL = number of sectors to verify, CH = track, CL = sector
CODE:041A                                                           ; DH = head, DL = drive
CODE:041A                                                           ; Return: CF set on error, AH = status
CODE:041A                                                           ; AL = number of sectors verified
CODE:041C 72 06                             jb      short VFRETRY
CODE:041E C6 06 3B 05 00                    mov     NVRFYTRY, 0
CODE:0423
CODE:0423                   VFRET:                                  ; CODE XREF: VRFYSECS+28↓j
CODE:0423 C3                                retn
CODE:0424                   ; ───────────────────────────────────────────────────────────────────────────
CODE:0424
CODE:0424                   VFRETRY:                                ; CODE XREF: VRFYSECS+C↑j
CODE:0424 50                                push    ax
CODE:0425 33 C0                             xor     ax, ax
CODE:0427 CD 13                             int     13h             ; DISK - RESET DISK SYSTEM
CODE:0427                                                           ; DL = drive (if bit 7 is set both hard disks and floppy disks reset)
CODE:0429 58                                pop     ax
CODE:042A 80 FC 80                          cmp     ah, 80h
CODE:042D 74 15                             jz      short VFNRDY
CODE:042F FE 06 3B 05                       inc     NVRFYTRY
CODE:0433 82 3E 3B 05 04                    cmp     NVRFYTRY, 4
CODE:0438 75 E9                             jnz     short VFRET
CODE:043A B8 48 06                          mov     ax, offset VFERR ; "\r\nUnrecoverable verify error on target$"
CODE:043D E8 7B 00                          call    WARN
CODE:0440 58                                pop     ax
CODE:0441 E9 35 FF                          jmp     WRNXT2
CODE:0444                   ; ───────────────────────────────────────────────────────────────────────────
CODE:0444
CODE:0444                   VFNRDY:                                 ; CODE XREF: VRFYSECS+1D↑j
CODE:0444 E8 BF 00                          call    ERRNRDY
CODE:0447 EB C7                             jmp     short VRFYSECS
CODE:0447                   VRFYSECS        endp
CODE:0447
CODE:0449
CODE:0449                   ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
CODE:0449
CODE:0449
CODE:0449                   FMTTRK          proc near               ; CODE XREF: WRSECS+27↑p
CODE:0449 80 0E 38 05 08                    or      FLAGS, F_DSTWRT
CODE:044E 06                                push    es
CODE:044F 0E                                push    cs
CODE:0450 07                                pop     es
CODE:0451                                   assume es:CODE
CODE:0451 52                                push    dx
CODE:0452 C6 06 3C 05 00                    mov     NFMTTRY, 0
CODE:0457 8A C5                             mov     al, ch
CODE:0459 B4 01                             mov     ah, 1
CODE:045B F6 06 38 05 40                    test    FLAGS, F_CPY2SID
CODE:0460 75 02                             jnz     short FMTLP
CODE:0462 FE CC                             dec     ah
CODE:0464
CODE:0464                   FMTLP:                                  ; CODE XREF: FMTTRK+17↑j
CODE:0464                                                           ; FMTTRK+3F↓j
CODE:0464 8A F4                             mov     dh, ah
CODE:0466 BB 3E 05                          mov     bx, (offset FMTCHRN-4)
CODE:0469
CODE:0469                   CHRNLP:                                 ; CODE XREF: FMTTRK+29↓j
CODE:0469 83 C3 04                          add     bx, 4
CODE:046C 89 07                             mov     [bx], ax
CODE:046E 82 7F 02 08                       cmp     byte ptr [bx+2], 8
CODE:0472 75 F5                             jnz     short CHRNLP
CODE:0474
CODE:0474                   DOFMT:                                  ; CODE XREF: FMTTRK+5D↓j
CODE:0474                                                           ; FMTTRK+68↓j ...
CODE:0474 BB 42 05                          mov     bx, offset FMTCHRN
CODE:0477 B8 08 05                          mov     ax, 508h
CODE:047A CD 13                             int     13h             ; DISK - FLOPPY- FORMAT TRACK
CODE:047A                                                           ; AL = interleave value (XT only), ES:BX = 512-byte format buffer
CODE:047A                                                           ; CH = cylinder number, CL = sector number, DH = head, DL = drive
CODE:047A                                                           ; Return: AH = status code
CODE:047C 72 0F                             jb      short FMTRETRY
CODE:047E C6 06 3C 05 00                    mov     NFMTTRY, 0
CODE:0483 A1 42 05                          mov     ax, word ptr FMTCHRN.C
CODE:0486 FE CC                             dec     ah
CODE:0488 74 DA                             jz      short FMTLP
CODE:048A 5A                                pop     dx
CODE:048B 07                                pop     es
CODE:048C                                   assume es:nothing
CODE:048C C3                                retn
CODE:048D                   ; ───────────────────────────────────────────────────────────────────────────
CODE:048D
CODE:048D                   FMTRETRY:                               ; CODE XREF: FMTTRK+33↑j
CODE:048D 50                                push    ax
CODE:048E 33 C0                             xor     ax, ax
CODE:0490 CD 13                             int     13h             ; DISK - RESET DISK SYSTEM
CODE:0490                                                           ; DL = drive (if bit 7 is set both hard disks and floppy disks reset)
CODE:0492 58                                pop     ax
CODE:0493 80 FC 80                          cmp     ah, 80h
CODE:0496 74 16                             jz      short FMTNRDY
CODE:0498 82 FC 03                          cmp     ah, 3
CODE:049B 74 16                             jz      short FMTERRWP
CODE:049D FE 06 3C 05                       inc     NFMTTRY
CODE:04A1 82 3E 3C 05 04                    cmp     NFMTTRY, 4
CODE:04A6 75 CC                             jnz     short DOFMT
CODE:04A8 BA AA 06                          mov     dx, offset FMTERR ; "\r\nUnrecoverable format error on target\r"...
CODE:04AB E9 2E FD                          jmp     ERRDSTBAD
CODE:04AE                   ; ───────────────────────────────────────────────────────────────────────────
CODE:04AE
CODE:04AE                   FMTNRDY:                                ; CODE XREF: FMTTRK+4D↑j
CODE:04AE E8 55 00                          call    ERRNRDY
CODE:04B1 EB C1                             jmp     short DOFMT
CODE:04B3                   ; ───────────────────────────────────────────────────────────────────────────
CODE:04B3
CODE:04B3                   FMTERRWP:                               ; CODE XREF: FMTTRK+52↑j
CODE:04B3 B8 EE 06                          mov     ax, offset WPERR ; "\r\nTarget diskette write protected\r\n"
CODE:04B6 E8 02 00                          call    WARN
CODE:04B9 EB B9                             jmp     short DOFMT
CODE:04B9                   FMTTRK          endp
CODE:04B9
CODE:04BB
CODE:04BB                   ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
CODE:04BB
CODE:04BB
CODE:04BB                   WARN            proc near               ; CODE XREF: RDSECS+DA↑p
CODE:04BB                                                           ; WRSECS+95↑p ...
CODE:04BB 52                                push    dx
CODE:04BC 88 36 80 06                       mov     byte ptr SIDDIG, dh ; "0\a\r\n$"
CODE:04C0 80 0E 80 06 30                    or      byte ptr SIDDIG, '0' ; "0\a\r\n$"
CODE:04C5 8B D0                             mov     dx, ax
CODE:04C7 B4 09                             mov     ah, 9
CODE:04C9 CD 21                             int     21h             ; DOS - PRINT STRING
CODE:04C9                                                           ; DS:DX -> string terminated by "$"
CODE:04CB 81 FA EE 06                       cmp     dx, offset WPERR ; "\r\nTarget diskette write protected\r\n"
CODE:04CF 74 2E                             jz      short NOPOS
CODE:04D1 81 FA 62 05                       cmp     dx, offset FMTMSG ; "\r\nFormatting while copying\r\n$"
CODE:04D5 74 26                             jz      short NOKEY
CODE:04D7 C7 06 77 06 30 30                 mov     word ptr TRKDIG, '00' ; "00, side "
CODE:04DD 8A E5                             mov     ah, ch
CODE:04DF
CODE:04DF                   TRKNOLP:                                ; CODE XREF: WARN+30↓j
CODE:04DF 82 FC 0A                          cmp     ah, 10
CODE:04E2 72 09                             jb      short TRKNOFIL
CODE:04E4 FE 06 77 06                       inc     byte ptr TRKDIG ; "00, side "
CODE:04E8 82 EC 0A                          sub     ah, 10
CODE:04EB EB F2                             jmp     short TRKNOLP
CODE:04ED                   ; ───────────────────────────────────────────────────────────────────────────
CODE:04ED
CODE:04ED                   TRKNOFIL:                               ; CODE XREF: WARN+27↑j
CODE:04ED 08 26 78 06                       or      byte ptr TRKDIG+1, ah
CODE:04F1 BA 6F 06                          mov     dx, offset TRKSIDMSG ; "\r\nTrack "
CODE:04F4 B4 09                             mov     ah, 9
CODE:04F6 CD 21                             int     21h             ; DOS - PRINT STRING
CODE:04F6                                                           ; DS:DX -> string terminated by "$"
CODE:04F8 80 0E 38 05 20                    or      FLAGS, F_DSTBAD
CODE:04FD
CODE:04FD                   NOKEY:                                  ; CODE XREF: WARN+1A↑j
CODE:04FD 5A                                pop     dx
CODE:04FE C3                                retn
CODE:04FF                   ; ───────────────────────────────────────────────────────────────────────────
CODE:04FF
CODE:04FF                   NOPOS:                                  ; CODE XREF: WARN+14↑j
CODE:04FF B8 01 0C                          mov     ax, 0C01h
CODE:0502 CD 21                             int     21h             ; DOS - CLEAR KEYBOARD BUFFER
CODE:0502                                                           ; AL must be 01h, 06h, 07h, 08h, or 0Ah.
CODE:0504 5A                                pop     dx
CODE:0505 C3                                retn
CODE:0505                   WARN            endp
CODE:0505
CODE:0506
CODE:0506                   ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
CODE:0506
CODE:0506
CODE:0506                   ERRNRDY         proc near               ; CODE XREF: RDSECS:RDNRDY↑p
CODE:0506                                                           ; WRSECS:WRNRDY↑p ...
CODE:0506 52                                push    dx
CODE:0507 82 C2 41                          add     dl, 'A'
CODE:050A 88 16 A7 07                       mov     DRVLET, dl
CODE:050E BA 7D 07                          mov     dx, offset NRDYERR ; "\r\nNot ready error $"
CODE:0511 B4 09                             mov     ah, 9
CODE:0513 CD 21                             int     21h             ; DOS - PRINT STRING
CODE:0513                                                           ; DS:DX -> string terminated by "$"
CODE:0515 BA 90 07                          mov     dx, offset READING ; "reading$"
CODE:0518 F6 06 38 05 08                    test    FLAGS, 8
CODE:051D 74 03                             jz      short MSGNRDY
CODE:051F BA 98 07                          mov     dx, offset WRITING ; "writing$"
CODE:0522
CODE:0522                   MSGNRDY:                                ; CODE XREF: ERRNRDY+17↑j
CODE:0522 CD 21                             int     21h             ; DOS - PRINT STRING
CODE:0522                                                           ; DS:DX -> string terminated by "$"
CODE:0524 BA A0 07                          mov     dx, offset DRVMES ; " drive "
CODE:0527 CD 21                             int     21h             ; DOS - PRINT STRING
CODE:0527                                                           ; DS:DX -> string terminated by "$"
CODE:0529 BA 11 07                          mov     dx, offset CORRMSG ; "\r\nCorrect, then strike any key\a\r\n$"
CODE:052C CD 21                             int     21h             ; DOS - PRINT STRING
CODE:052C                                                           ; DS:DX -> string terminated by "$"
CODE:052E B8 01 0C                          mov     ax, 0C01h
CODE:0531 CD 21                             int     21h             ; DOS - CLEAR KEYBOARD BUFFER
CODE:0531                                                           ; AL must be 01h, 06h, 07h, 08h, or 0Ah.
CODE:0533 5A                                pop     dx
CODE:0534 C3                                retn
CODE:0534                   ERRNRDY         endp
CODE:0534
CODE:0534                   ; ───────────────────────────────────────────────────────────────────────────
CODE:0535 00                TRKNO           db 0                    ; DATA XREF: DISK_CONT+2B↑r
CODE:0535                                                           ; DISK_CONT+5E↑w ...
CODE:0536 00                BUFNTRKS        db 0                    ; DATA XREF: DISK_CONT+76↑r
CODE:0536                                                           ; DISK_CONT+7B↑w ...
CODE:0537 00                NXTTRKNO        db 0                    ; DATA XREF: RDSECS+1A↑w
CODE:0537                                                           ; RDSECS+28↑r ...
CODE:0538 00                FLAGS           db 0                    ; DATA XREF: DISK_CONT+7↑r
CODE:0538                                                           ; DISK_CONT+1E↑r ...
CODE:0539 00                NRDTRY          db 0                    ; DATA XREF: RDSECS+5↑w
CODE:0539                                                           ; RDSECS:RDNXT1↑w ...
CODE:053A 00                NWRTRY          db 0                    ; DATA XREF: WRSECS:WRNXT1↑w
CODE:053A                                                           ; WRSECS+71↑w ...
CODE:053B 00                NVRFYTRY        db 0                    ; DATA XREF: WRSECS+17↑w
CODE:053B                                                           ; WRSECS+3B↑r ...
CODE:053C 00                NFMTTRY         db 0                    ; DATA XREF: FMTTRK+9↑w
CODE:053C                                                           ; FMTTRK+35↑w ...
CODE:053D 00                NXTSIDNO        db 0                    ; DATA XREF: DISK_CONT+6A↑w
CODE:053D                                                           ; RDSECS+7A↑w ...
CODE:053E 00 00             BUFFER          dw 0                    ; DATA XREF: RDSECS+22↑r
CODE:053E                                                           ; WRSECS+C↑r ...
CODE:0540 00                                db    0
CODE:0541 01                                db    1
CODE:0542 00 00 01 02 00 00+FMTCHRN         CHRN <0, 0, 1, 2>       ; DATA XREF: FMTTRK+1D↑o
CODE:0542 02 02 00 00 03 02+                                        ; FMTTRK:DOFMT↑o ...
CODE:0542 00 00 04 02 00 00+                CHRN <0, 0, 2, 2>
CODE:0542 05 02 00 00 06 02+                CHRN <0, 0, 3, 2>
CODE:0542 00 00 07 02 00 00+                CHRN <0, 0, 4, 2>
CODE:0542 08 02                             CHRN <0, 0, 5, 2>
CODE:0542                                   CHRN <0, 0, 6, 2>
CODE:0542                                   CHRN <0, 0, 7, 2>
CODE:0542                                   CHRN <0, 0, 8, 2>
CODE:0562 0D 0A 46 6F 72 6D+FMTMSG          db 0Dh,0Ah              ; DATA XREF: WRSECS+92↑o
CODE:0562 61 74 74 69 6E 67+                                        ; WARN+16↑o
CODE:0562 20 77 68 69 6C 65+                db 'Formatting while copying',0Dh,0Ah,'$'
CODE:057F 0D 0A 49 6E 73 65+SRCMSG          db 0Dh,0Ah              ; DATA XREF: DISK_CONT↑o
CODE:057F 72 74 20 73 6F 75+                                        ; ASKSRC↑o
CODE:057F 72 63 65 20 64 69+                db 'Insert source diskette in drive '
CODE:05A1 40 3A 0D 0A 24    SRCLET          db '@:',0Dh,0Ah,'$'     ; DATA XREF: DISK_ENTRY+6C↓w
CODE:05A6 0D 0A 49 6E 73 65+DSTMSG          db 0Dh,0Ah              ; DATA XREF: ASKDST↑o
CODE:05A6 72 74 20 74 61 72+                db 'Insert target diskette in drive '
CODE:05C8 40 3A 0D 0A 24    DSTLET          db '@:',0Dh,0Ah,'$'     ; DATA XREF: DISK_ENTRY+7A↓w
CODE:05CD 0D 0A 53 74 72 69+KEYMSG          db 0Dh,0Ah              ; DATA XREF: DISK_CONT+E↑o
CODE:05CD 6B 65 20 61 6E 79+                                        ; ASKKEY+4↑o
CODE:05CD 20 6B 65 79 20 77+                db 'Strike any key when ready',0Dh,0Ah,'$'
CODE:05EB 0D 0A 43 6F 70 79+GOODMSG         db 0Dh,0Ah              ; DATA XREF: DISK_CONT+3C↑o
CODE:05EB 20 63 6F 6D 70 6C+                db 'Copy complete',0Dh,0Ah,'$'
CODE:05FD 0D 0A 55 6E 72 65+RDERR           db 0Dh,0Ah              ; DATA XREF: RDSECS:ERRRD↑o
CODE:05FD 63 6F 76 65 72 61+                db 'Unrecoverable read error on source$'
CODE:0622 0D 0A 55 6E 72 65+WRERR           db 0Dh,0Ah              ; DATA XREF: WRSECS:ERRWR↑o
CODE:0622 63 6F 76 65 72 61+                db 'Unrecoverable write error on target$'
CODE:0648 0D 0A 55 6E 72 65+VFERR           db 0Dh,0Ah              ; DATA XREF: VRFYSECS+2A↑o
CODE:0648 63 6F 76 65 72 61+                db 'Unrecoverable verify error on target$'
CODE:066F 0D 0A 54 72 61 63+TRKSIDMSG       db 0Dh,0Ah              ; DATA XREF: WARN+36↑o
CODE:066F 6B 20                             db 'Track '
CODE:0677 30 30 2C 20 73 69+TRKDIG          db '00, side '          ; DATA XREF: WARN+1C↑w
CODE:0677 64 65 20                                                  ; WARN+29↑w ...
CODE:0680 30 07 0D 0A 24    SIDDIG          db '0',7,0Dh,0Ah,'$'    ; DATA XREF: WARN+1↑w
CODE:0680                                                           ; WARN+5↑w
CODE:0685 0D 0A 54 61 72 67+DSTBADERR       db 0Dh,0Ah              ; DATA XREF: DISK_CONT+32↑o
CODE:0685 65 74 20 64 69 73+                db 'Target diskette may be unusable',7,0Dh,0Ah,'$'
CODE:06AA 0D 0A 55 6E 72 65+FMTERR          db 0Dh,0Ah              ; DATA XREF: FMTTRK+5F↑o
CODE:06AA 63 6F 76 65 72 61+                db 'Unrecoverable format error on target',0Dh,0Ah
CODE:06D2 54 61 72 67 65 74+UNUSAERR        db 'Target diskette unusable',7,0Dh,0Ah,'$'
CODE:06D2 20 64 69 73 6B 65+                                        ; DATA XREF: WRSECS+D3↑o
CODE:06EE 0D 0A 54 61 72 67+WPERR           db 0Dh,0Ah              ; DATA XREF: WRSECS:ERRWP↑o
CODE:06EE 65 74 20 64 69 73+                                        ; FMTTRK:FMTERRWP↑o ...
CODE:06EE 6B 65 74 74 65 20+                db 'Target diskette write protected',0Dh,0Ah
CODE:0711 0D 0A 43 6F 72 72+CORRMSG         db 0Dh,0Ah              ; DATA XREF: ERRNRDY+23↑o
CODE:0711 65 63 74 2C 20 74+                db 'Correct, then strike any key',7,0Dh,0Ah,'$'
CODE:0733 0D 0A 43 6F 70 79+ANOPROMPT       db 0Dh,0Ah              ; DATA XREF: DISK_CONT:PROMPTANO↑o
CODE:0733 20 61 6E 6F 74 68+                db 'Copy another (Y/N)?$'
CODE:0749 0D 0A 43 6F 70 79+CPYMSG          db 0Dh,0Ah              ; DATA XREF: MSGCPY+1↑o
CODE:0749 69 6E 67 20                       db 'Copying '
CODE:0753 00                NSIDSDIG        db 0                    ; DATA XREF: RDSECS+6C↑w
CODE:0753                                                           ; RDSECS+CD↑w
CODE:0754 20 73 69 64 65 28+                db ' side(s)',0Dh,0Ah,'$'
CODE:075F 0D 0A 49 6E 63 6F+NCMPERR         db 0Dh,0Ah              ; DATA XREF: WRSECS+CC↑o
CODE:075F 6D 70 61 74 69 62+                db 'Incompatible drive types',0Dh,0Ah
CODE:075F 6C 65 20 64 72 69+                db 7,'$'
CODE:077D 0D 0A 4E 6F 74 20+NRDYERR         db 0Dh,0Ah              ; DATA XREF: ERRNRDY+8↑o
CODE:077D 72 65 61 64 79 20+                db 'Not ready error $'
CODE:0790 72 65 61 64 69 6E+READING         db 'reading$'           ; DATA XREF: ERRNRDY+F↑o
CODE:0798 77 72 69 74 69 6E+WRITING         db 'writing$'           ; DATA XREF: ERRNRDY+19↑o
CODE:07A0 20 64 72 69 76 65+DRVMES          db ' drive '            ; DATA XREF: ERRNRDY+1E↑o
CODE:07A7 00                DRVLET          db 0                    ; DATA XREF: ERRNRDY+4↑w
CODE:07A8 0D 0A 24 00                       db 0Dh,0Ah
CODE:07A8                                   db '$',0
CODE:07AC
CODE:07AC                   ; ███████████████ S U B R O U T I N E ███████████████████████████████████████
CODE:07AC
CODE:07AC
CODE:07AC                   DISK_ENTRY      proc near               ; CODE XREF: DISKCOPY↑j
CODE:07AC                                                           ; DATA XREF: DISK_ENTRY+91↓o
CODE:07AC FC                                cld
CODE:07AD BC 00 01                          mov     sp, offset DISKCOPY
CODE:07B0 33 D2                             xor     dx, dx
CODE:07B2 52                                push    dx
CODE:07B3 0A E0                             or      ah, al
CODE:07B5 82 FC FF                          cmp     ah, 0FFh
CODE:07B8 74 48                             jz      short ERRDRV
CODE:07BA BA A0 08                          mov     dx, offset PRMERR ; "\r\nInvalid parameter\a\r\n$"
CODE:07BD 82 3E 5D 00 20                    cmp     byte ptr DS:FCB1+1, 20h
CODE:07C2 75 41                             jnz     short PRINTERR
CODE:07C4 82 3E 6D 00 20                    cmp     byte ptr ds:FCB2+1, 20h
CODE:07C9 75 3A                             jnz     short PRINTERR
CODE:07CB 8A 26 6C 00                       mov     ah, ds:FCB2
CODE:07CF 88 26 5D 00                       mov     ds:DEST, ah
CODE:07D3 CD 11                             int     11h             ; EQUIPMENT DETERMINATION
CODE:07D3                                                           ; Return: AX = equipment flag bits
CODE:07D5 B1 06                             mov     cl, 6
CODE:07D7 D2 E8                             shr     al, cl
CODE:07D9 24 03                             and     al, 3
CODE:07DB FE C0                             inc     al
CODE:07DD 8A D8                             mov     bl, al
CODE:07DF B4 19                             mov     ah, 19h
CODE:07E1 CD 21                             int     21h             ; DOS - GET DEFAULT DISK NUMBER
CODE:07E3 FE C0                             inc     al
CODE:07E5 82 FB 01                          cmp     bl, 1
CODE:07E8 75 0C                             jnz     short TWODRV1
CODE:07EA C6 06 5C 00 01                    mov     byte ptr ds:SOURCE, 1
CODE:07EF C6 06 5D 00 01                    mov     byte ptr ds:DEST, 1
CODE:07F4 EB 1F                             jmp     short ONEDRV1
CODE:07F6                   ; ───────────────────────────────────────────────────────────────────────────
CODE:07F6
CODE:07F6                   TWODRV1:                                ; CODE XREF: DISK_ENTRY+3C↑j
CODE:07F6 F6 06 5C 00 FF                    test    byte ptr ds:SOURCE, 0FFh
CODE:07FB 75 0E                             jnz     short TWODRV2
CODE:07FD A2 5C 00                          mov     ds:SOURCE, al
CODE:0800 EB 09                             jmp     short TWODRV2
CODE:0802                   ; ───────────────────────────────────────────────────────────────────────────
CODE:0802
CODE:0802                   ERRDRV:                                 ; CODE XREF: DISK_ENTRY+C↑j
CODE:0802 BA B7 08                          mov     dx, offset DRVERR ; "\r\nInvalid drive specification\a\r\n$"
CODE:0805
CODE:0805                   PRINTERR:                               ; CODE XREF: DISK_ENTRY+16↑j
CODE:0805                                                           ; DISK_ENTRY+1D↑j ...
CODE:0805 B4 09                             mov     ah, 9
CODE:0807 CD 21                             int     21h             ; DOS - PRINT STRING
CODE:0807                                                           ; DS:DX -> string terminated by "$"
CODE:0809 CD 20                             int     20h             ; DOS - PROGRAM TERMINATION
CODE:0809                                                           ; returns to DOS--identical to INT 21/AH=00h
CODE:080B                   ; ───────────────────────────────────────────────────────────────────────────
CODE:080B
CODE:080B                   TWODRV2:                                ; CODE XREF: DISK_ENTRY+4F↑j
CODE:080B                                                           ; DISK_ENTRY+54↑j
CODE:080B F6 06 5D 00 FF                    test    byte ptr ds:DEST, 0FFh
CODE:0810 75 03                             jnz     short ONEDRV1
CODE:0812 A2 5D 00                          mov     ds:DEST, al
CODE:0815
CODE:0815                   ONEDRV1:                                ; CODE XREF: DISK_ENTRY+48↑j
CODE:0815                                                           ; DISK_ENTRY+64↑j
CODE:0815 A0 5C 00                          mov     al, ds:SOURCE
CODE:0818 08 06 A1 05                       or      byte ptr SRCLET, al ; "@:\r\n$"
CODE:081C FE C8                             dec     al
CODE:081E A2 5C 00                          mov     ds:SOURCE, al
CODE:0821 8A E0                             mov     ah, al
CODE:0823 A0 5D 00                          mov     al, ds:DEST
CODE:0826 08 06 C8 05                       or      byte ptr DSTLET, al ; "@:\r\n$"
CODE:082A FE C8                             dec     al
CODE:082C A2 5D 00                          mov     ds:DEST, al
CODE:082F 3A C4                             cmp     al, ah
CODE:0831 75 05                             jnz     short TWODRV3
CODE:0833 80 0E 38 05 01                    or      FLAGS, F_ONEDRV
CODE:0838
CODE:0838                   TWODRV3:                                ; CODE XREF: DISK_ENTRY+85↑j
CODE:0838 C6 06 3D 05 01                    mov     NXTSIDNO, 1
CODE:083D BA AC 07                          mov     dx, offset DISK_ENTRY
CODE:0840 B1 04                             mov     cl, 4
CODE:0842 D3 EA                             shr     dx, cl
CODE:0844 8C C8                             mov     ax, cs
CODE:0846 03 D0                             add     dx, ax
CODE:0848 32 D2                             xor     dl, dl
CODE:084A FE C6                             inc     dh
CODE:084C 89 16 3E 05                       mov     BUFFER, dx
CODE:0850 A1 02 00                          mov     ax, ds:CPMMEM
CODE:0853 2B C2                             sub     ax, dx
CODE:0855 B1 08                             mov     cl, 8
CODE:0857 D3 E8                             shr     ax, cl
CODE:0859 BA 87 08                          mov     dx, offset MEMERR ; "\r\nInsufficient memory\a\r\n$"
CODE:085C 3D 02 00                          cmp     ax, 2
CODE:085F 72 A4                             jb      short PRINTERR
CODE:0861 A2 36 05                          mov     BUFNTRKS, al
CODE:0864 32 ED                             xor     ch, ch
CODE:0866 8A 0E 80 00                       mov     cl, ds:ARGLEN
CODE:086A E3 18                             jcxz    short NOARGS
CODE:086C BF 81 00                          mov     di, ARGS
CODE:086F B0 2F                             mov     al, '/'
CODE:0871 F2 AE                             repne scasb
CODE:0873 75 0F                             jnz     short NOARGS
CODE:0875 82 3D 31                          cmp     byte ptr [di], '1'
CODE:0878 75 0A                             jnz     short NOARGS
CODE:087A 80 0E 38 05 02                    or      FLAGS, F_USR1SID
CODE:087F C6 06 3D 05 00                    mov     NXTSIDNO, 0
CODE:0884
CODE:0884                   NOARGS:                                 ; CODE XREF: DISK_ENTRY+BE↑j
CODE:0884                                                           ; DISK_ENTRY+C7↑j ...
CODE:0884 E9 16 F9                          jmp     DISK_CONT
CODE:0884                   DISK_ENTRY      endp
CODE:0884
CODE:0884                   ; ───────────────────────────────────────────────────────────────────────────
CODE:0887 0D 0A 49 6E 73 75+MEMERR          db 0Dh,0Ah              ; DATA XREF: DISK_ENTRY+AD↑o
CODE:0887 66 66 69 63 69 65+                db 'Insufficient memory',7,0Dh,0Ah,'$'
CODE:08A0 0D 0A 49 6E 76 61+PRMERR          db 0Dh,0Ah              ; DATA XREF: DISK_ENTRY+E↑o
CODE:08A0 6C 69 64 20 70 61+                db 'Invalid parameter',7,0Dh,0Ah,'$'
CODE:08B7 0D 0A 49 6E 76 61+DRVERR          db 0Dh,0Ah              ; DATA XREF: DISK_ENTRY:ERRDRV↑o
CODE:08B7 6C 69 64 20 64 72+                db 'Invalid drive specification',7,0Dh,0Ah,'$'
CODE:08B7 69 76 65 20 73 70+CODE            ends
CODE:08B7 65 63 69 66 69 63+
CODE:08B7 61 74 69 6F 6E 07+
CODE:08B7 0D 0A 24                          end DISKCOPY
